name: Build & Deploy (Cloud Run + Terraform)

on:
  pull_request:
    branches:
      - main
      - release/*
env:
  PROJECT_ID: morume
  REGION: us-central1
  SERVICE_NAME: morume
  IMAGE_NAME: api
  SWAGGER_USER: ${{ secrets.SWAGGER_USER }}
  SWAGGER_PASS: ${{ secrets.SWAGGER_PASS }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DIRECT_URL: ${{ secrets.DIRECT_URL }}
  GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
  GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリ取得
      - uses: actions/checkout@v4

      # Inserted step for authentication
      - uses: google-github-actions/auth@v1
        with:
          project_id: morume
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # 2. gcloud セットアップ（サービスアカウント キーで認証）
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # 3. buildx セットアップ
      - uses: docker/setup-buildx-action@v3

      # 4. Artifact Registry へログイン
      - name: Docker Auth to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # 5. コンテナイメージ Build & Push
      - name: Build & Push image
        run: |
          docker buildx build --platform linux/amd64 \
            -t us-central1-docker.pkg.dev/morume/cloud-run/api:latest \
            --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --build-arg DIRECT_URL="${{ secrets.DIRECT_URL }}" \
            --push .

      # 6. 最新イメージ digest を取得
      - id: digest
        name: Get image digest
        run: |
          DIGEST=$(gcloud container images describe \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run/${{ env.IMAGE_NAME }}:latest \
            --format='get(image_summary.digest)')
          echo "IMAGE_REF=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run/${{ env.IMAGE_NAME }}@$DIGEST" >> "$GITHUB_OUTPUT"

      # 7. Terraform CLI セットアップ（Cloud 連携なし）
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      # 8. terraform init（ローカル state）
      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      # 9.5. terraform import（Cloud Run Service 既存取り込み）
      - name: Terraform Import Cloud Run Service
        working-directory: terraform
        run: |
          terraform import -input=false \
            google_cloud_run_service.api \
            locations/${{ env.REGION }}/namespaces/${{ env.PROJECT_ID }}/services/${{ env.SERVICE_NAME }}
        env:
          TF_INPUT: false
          TF_VAR_PROJECT_ID: ${{ env.PROJECT_ID }}
          TF_VAR_REGION: ${{ env.REGION }}
          TF_VAR_API_IMAGE_URL: ${{ steps.digest.outputs.IMAGE_REF }}
          TF_VAR_SWAGGER_USER: ${{ env.SWAGGER_USER }}
          TF_VAR_SWAGGER_PASS: ${{ env.SWAGGER_PASS }}
          TF_VAR_POSTGRES_USER: ${{ env.POSTGRES_USER }}
          TF_VAR_POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          TF_VAR_POSTGRES_DB: ${{ env.POSTGRES_DB }}
          TF_VAR_POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
          TF_VAR_GOOGLE_PROJECT_ID: ${{ env.GOOGLE_PROJECT_ID }}
          TF_VAR_GOOGLE_PRIVATE_KEY: ${{ env.GOOGLE_PRIVATE_KEY }}
          TF_VAR_GOOGLE_CLIENT_EMAIL: ${{ env.GOOGLE_CLIENT_EMAIL }}
          TF_VAR_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TF_VAR_DIRECT_URL: ${{ secrets.DIRECT_URL }}
          TF_VAR_SERVICE_NAME: ${{ env.SERVICE_NAME }}

      # 10. terraform apply（prod.tfvars + image digest）
      - name: Terraform Apply
        working-directory: terraform
        env:
          TF_VAR_SERVICE_NAME: ${{ env.SERVICE_NAME }}
        run: |
          terraform apply -input=false -auto-approve \
            -var="PROJECT_ID=${{ env.PROJECT_ID }}" \
            -var="REGION=${{ env.REGION }}" \
            -var="API_IMAGE_URL=${{ steps.digest.outputs.IMAGE_REF }}" \
            -var="SWAGGER_USER=${{ env.SWAGGER_USER }}" \
            -var="SWAGGER_PASS=${{ env.SWAGGER_PASS }}" \
            -var="POSTGRES_USER=${{ env.POSTGRES_USER }}" \
            -var="POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" \
            -var="POSTGRES_DB=${{ env.POSTGRES_DB }}" \
            -var="POSTGRES_PORT=${{ env.POSTGRES_PORT }}" \
            -var="GOOGLE_PROJECT_ID=${{ env.GOOGLE_PROJECT_ID }}" \
            -var="GOOGLE_PRIVATE_KEY=${{ env.GOOGLE_PRIVATE_KEY }}" \
            -var="GOOGLE_CLIENT_EMAIL=${{ env.GOOGLE_CLIENT_EMAIL }}" \
            -var="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            -var="DIRECT_URL=${{ secrets.DIRECT_URL }}"
